/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WorkspaceImport } from './routes/_workspace'
import { Route as IndexImport } from './routes/index'
import { Route as WorkspacePlaygroundImport } from './routes/_workspace/playground'
import { Route as WorkspaceItemsImport } from './routes/_workspace/items'
import { Route as WorkspaceExplorerImport } from './routes/_workspace/explorer'
import { Route as WorkspaceChangeordersImport } from './routes/_workspace/changeorders'
import { Route as WorkspaceExplorerIndexImport } from './routes/_workspace/explorer/index'
import { Route as WorkspaceExplorerLinksImport } from './routes/_workspace/explorer/links'
import { Route as WorkspaceExplorerFoldersImport } from './routes/_workspace/explorer/folders'
import { Route as WorkspaceExplorerFilesImport } from './routes/_workspace/explorer/files'
import { Route as WorkspaceExplorerIdImport } from './routes/_workspace/explorer.$id'
import { Route as WorkspaceExplorerIdIndexImport } from './routes/_workspace/explorer.$id.index'
import { Route as WorkspaceExplorerFilesIdImport } from './routes/_workspace/explorer_.files_.$id'
import { Route as WorkspaceExplorerIdLinksImport } from './routes/_workspace/explorer.$id.links'
import { Route as WorkspaceExplorerIdFoldersImport } from './routes/_workspace/explorer.$id.folders'
import { Route as WorkspaceExplorerIdFilesImport } from './routes/_workspace/explorer.$id.files'

// Create/Update Routes

const WorkspaceRoute = WorkspaceImport.update({
  id: '/_workspace',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WorkspacePlaygroundRoute = WorkspacePlaygroundImport.update({
  path: '/playground',
  getParentRoute: () => WorkspaceRoute,
} as any)

const WorkspaceItemsRoute = WorkspaceItemsImport.update({
  path: '/items',
  getParentRoute: () => WorkspaceRoute,
} as any)

const WorkspaceExplorerRoute = WorkspaceExplorerImport.update({
  path: '/explorer',
  getParentRoute: () => WorkspaceRoute,
} as any)

const WorkspaceChangeordersRoute = WorkspaceChangeordersImport.update({
  path: '/changeorders',
  getParentRoute: () => WorkspaceRoute,
} as any)

const WorkspaceExplorerIndexRoute = WorkspaceExplorerIndexImport.update({
  path: '/',
  getParentRoute: () => WorkspaceExplorerRoute,
} as any)

const WorkspaceExplorerLinksRoute = WorkspaceExplorerLinksImport.update({
  path: '/links',
  getParentRoute: () => WorkspaceExplorerRoute,
} as any)

const WorkspaceExplorerFoldersRoute = WorkspaceExplorerFoldersImport.update({
  path: '/folders',
  getParentRoute: () => WorkspaceExplorerRoute,
} as any)

const WorkspaceExplorerFilesRoute = WorkspaceExplorerFilesImport.update({
  path: '/files',
  getParentRoute: () => WorkspaceExplorerRoute,
} as any)

const WorkspaceExplorerIdRoute = WorkspaceExplorerIdImport.update({
  path: '/$id',
  getParentRoute: () => WorkspaceExplorerRoute,
} as any)

const WorkspaceExplorerIdIndexRoute = WorkspaceExplorerIdIndexImport.update({
  path: '/',
  getParentRoute: () => WorkspaceExplorerIdRoute,
} as any)

const WorkspaceExplorerFilesIdRoute = WorkspaceExplorerFilesIdImport.update({
  path: '/explorer/files/$id',
  getParentRoute: () => WorkspaceRoute,
} as any)

const WorkspaceExplorerIdLinksRoute = WorkspaceExplorerIdLinksImport.update({
  path: '/links',
  getParentRoute: () => WorkspaceExplorerIdRoute,
} as any)

const WorkspaceExplorerIdFoldersRoute = WorkspaceExplorerIdFoldersImport.update(
  {
    path: '/folders',
    getParentRoute: () => WorkspaceExplorerIdRoute,
  } as any,
)

const WorkspaceExplorerIdFilesRoute = WorkspaceExplorerIdFilesImport.update({
  path: '/files',
  getParentRoute: () => WorkspaceExplorerIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_workspace': {
      id: '/_workspace'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof WorkspaceImport
      parentRoute: typeof rootRoute
    }
    '/_workspace/changeorders': {
      id: '/_workspace/changeorders'
      path: '/changeorders'
      fullPath: '/changeorders'
      preLoaderRoute: typeof WorkspaceChangeordersImport
      parentRoute: typeof WorkspaceImport
    }
    '/_workspace/explorer': {
      id: '/_workspace/explorer'
      path: '/explorer'
      fullPath: '/explorer'
      preLoaderRoute: typeof WorkspaceExplorerImport
      parentRoute: typeof WorkspaceImport
    }
    '/_workspace/items': {
      id: '/_workspace/items'
      path: '/items'
      fullPath: '/items'
      preLoaderRoute: typeof WorkspaceItemsImport
      parentRoute: typeof WorkspaceImport
    }
    '/_workspace/playground': {
      id: '/_workspace/playground'
      path: '/playground'
      fullPath: '/playground'
      preLoaderRoute: typeof WorkspacePlaygroundImport
      parentRoute: typeof WorkspaceImport
    }
    '/_workspace/explorer/$id': {
      id: '/_workspace/explorer/$id'
      path: '/$id'
      fullPath: '/explorer/$id'
      preLoaderRoute: typeof WorkspaceExplorerIdImport
      parentRoute: typeof WorkspaceExplorerImport
    }
    '/_workspace/explorer/files': {
      id: '/_workspace/explorer/files'
      path: '/files'
      fullPath: '/explorer/files'
      preLoaderRoute: typeof WorkspaceExplorerFilesImport
      parentRoute: typeof WorkspaceExplorerImport
    }
    '/_workspace/explorer/folders': {
      id: '/_workspace/explorer/folders'
      path: '/folders'
      fullPath: '/explorer/folders'
      preLoaderRoute: typeof WorkspaceExplorerFoldersImport
      parentRoute: typeof WorkspaceExplorerImport
    }
    '/_workspace/explorer/links': {
      id: '/_workspace/explorer/links'
      path: '/links'
      fullPath: '/explorer/links'
      preLoaderRoute: typeof WorkspaceExplorerLinksImport
      parentRoute: typeof WorkspaceExplorerImport
    }
    '/_workspace/explorer/': {
      id: '/_workspace/explorer/'
      path: '/'
      fullPath: '/explorer/'
      preLoaderRoute: typeof WorkspaceExplorerIndexImport
      parentRoute: typeof WorkspaceExplorerImport
    }
    '/_workspace/explorer/$id/files': {
      id: '/_workspace/explorer/$id/files'
      path: '/files'
      fullPath: '/explorer/$id/files'
      preLoaderRoute: typeof WorkspaceExplorerIdFilesImport
      parentRoute: typeof WorkspaceExplorerIdImport
    }
    '/_workspace/explorer/$id/folders': {
      id: '/_workspace/explorer/$id/folders'
      path: '/folders'
      fullPath: '/explorer/$id/folders'
      preLoaderRoute: typeof WorkspaceExplorerIdFoldersImport
      parentRoute: typeof WorkspaceExplorerIdImport
    }
    '/_workspace/explorer/$id/links': {
      id: '/_workspace/explorer/$id/links'
      path: '/links'
      fullPath: '/explorer/$id/links'
      preLoaderRoute: typeof WorkspaceExplorerIdLinksImport
      parentRoute: typeof WorkspaceExplorerIdImport
    }
    '/_workspace/explorer/files/$id': {
      id: '/_workspace/explorer/files/$id'
      path: '/explorer/files/$id'
      fullPath: '/explorer/files/$id'
      preLoaderRoute: typeof WorkspaceExplorerFilesIdImport
      parentRoute: typeof WorkspaceImport
    }
    '/_workspace/explorer/$id/': {
      id: '/_workspace/explorer/$id/'
      path: '/'
      fullPath: '/explorer/$id/'
      preLoaderRoute: typeof WorkspaceExplorerIdIndexImport
      parentRoute: typeof WorkspaceExplorerIdImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  WorkspaceRoute: WorkspaceRoute.addChildren({
    WorkspaceChangeordersRoute,
    WorkspaceExplorerRoute: WorkspaceExplorerRoute.addChildren({
      WorkspaceExplorerIdRoute: WorkspaceExplorerIdRoute.addChildren({
        WorkspaceExplorerIdFilesRoute,
        WorkspaceExplorerIdFoldersRoute,
        WorkspaceExplorerIdLinksRoute,
        WorkspaceExplorerIdIndexRoute,
      }),
      WorkspaceExplorerFilesRoute,
      WorkspaceExplorerFoldersRoute,
      WorkspaceExplorerLinksRoute,
      WorkspaceExplorerIndexRoute,
    }),
    WorkspaceItemsRoute,
    WorkspacePlaygroundRoute,
    WorkspaceExplorerFilesIdRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/_workspace"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/_workspace": {
      "filePath": "_workspace.jsx",
      "children": [
        "/_workspace/changeorders",
        "/_workspace/explorer",
        "/_workspace/items",
        "/_workspace/playground",
        "/_workspace/explorer/files/$id"
      ]
    },
    "/_workspace/changeorders": {
      "filePath": "_workspace/changeorders.jsx",
      "parent": "/_workspace"
    },
    "/_workspace/explorer": {
      "filePath": "_workspace/explorer.jsx",
      "parent": "/_workspace",
      "children": [
        "/_workspace/explorer/$id",
        "/_workspace/explorer/files",
        "/_workspace/explorer/folders",
        "/_workspace/explorer/links",
        "/_workspace/explorer/"
      ]
    },
    "/_workspace/items": {
      "filePath": "_workspace/items.jsx",
      "parent": "/_workspace"
    },
    "/_workspace/playground": {
      "filePath": "_workspace/playground.jsx",
      "parent": "/_workspace"
    },
    "/_workspace/explorer/$id": {
      "filePath": "_workspace/explorer.$id.jsx",
      "parent": "/_workspace/explorer",
      "children": [
        "/_workspace/explorer/$id/files",
        "/_workspace/explorer/$id/folders",
        "/_workspace/explorer/$id/links",
        "/_workspace/explorer/$id/"
      ]
    },
    "/_workspace/explorer/files": {
      "filePath": "_workspace/explorer/files.jsx",
      "parent": "/_workspace/explorer"
    },
    "/_workspace/explorer/folders": {
      "filePath": "_workspace/explorer/folders.jsx",
      "parent": "/_workspace/explorer"
    },
    "/_workspace/explorer/links": {
      "filePath": "_workspace/explorer/links.jsx",
      "parent": "/_workspace/explorer"
    },
    "/_workspace/explorer/": {
      "filePath": "_workspace/explorer/index.jsx",
      "parent": "/_workspace/explorer"
    },
    "/_workspace/explorer/$id/files": {
      "filePath": "_workspace/explorer.$id.files.jsx",
      "parent": "/_workspace/explorer/$id"
    },
    "/_workspace/explorer/$id/folders": {
      "filePath": "_workspace/explorer.$id.folders.jsx",
      "parent": "/_workspace/explorer/$id"
    },
    "/_workspace/explorer/$id/links": {
      "filePath": "_workspace/explorer.$id.links.jsx",
      "parent": "/_workspace/explorer/$id"
    },
    "/_workspace/explorer/files/$id": {
      "filePath": "_workspace/explorer_.files_.$id.jsx",
      "parent": "/_workspace"
    },
    "/_workspace/explorer/$id/": {
      "filePath": "_workspace/explorer.$id.index.jsx",
      "parent": "/_workspace/explorer/$id"
    }
  }
}
ROUTE_MANIFEST_END */
